import asyncio
import aiohttp
import argparse
import logging
import json
import requests
import time
from aiohttp import web

#Create Period for request data from URL
URL = 'https://www.cbr-xml-daily.ru/daily_json.js'
parser = argparse.ArgumentParser(description='API_Wallet')
parser.add_argument('-period', default=1, type=int)
args = parser.parse_args()

async def get_data_about_course():
    while True:
        response = requests.get(URL)
        Course_USD = response.json()['Valute']['USD']['Value']
        Course_EUR = response.json()['Valute']['EUR']['Value']
        print (f"EUR = {Course_EUR}, USD = {Course_USD}".format(Course_EUR=Course_EUR,
                                                   Course_USD=Course_USD))
        await asyncio.sleep(args.period)

async def test_print():
    while True:
        response = requests.get(URL)
        Course_EUR = 'Hello'
        Course_USD = 'World!!!'
        print (f"{Course_EUR} {Course_USD}".format(Course_EUR=Course_EUR,
                                                   Course_USD=Course_USD))
        await asyncio.sleep(2)

if __name__=="__main__":
    loop = asyncio.get_event_loop()
    tasks = [
        loop.create_task(get_data_about_course()),
        loop.create_task(test_print()),
    ]
    loop.run_until_complete(asyncio.wait(tasks))
    loop.close()


